{
  "nav": {
    "portfolio": "作品集",
    "about": "關於我",
    "resume": "履歷",
    "artstation": "ArtStation",
    "contact": "聯絡"
  },
  "style_bar_text": "我是一名充滿好奇心和抱負的遊戲開發者，致力於創造不僅玩法有趣，而且富有敘事、文化、歷史或情感內涵的遊戲。雖然我仍處於開發旅程的早期階段，但我堅定地一步步學習遊戲開發的各個方面，希望有一天能夠創作出真正對我自己、玩家社群，甚至世界有深遠影響的作品。",
  "portfolio": {
    "title": "作品集",
    "card_1": {
      "title": "Toymare",
      "genre": "類型：動作 + 解謎",
      "description": "一款 3D 恐怖遊戲，玩家扮演一名孩子，從被玩具附身的工廠中逃脫。",
      "button": "查看更多"
    },
    "card_2": {
      "title": "Grub Bug",
      "genre": "類型：動作 + 解謎",
      "description": "一款 3D 恐怖遊戲，玩家扮演一名孩子，從被玩具附身的工廠中逃脫。",
      "button": "查看更多"
    }
  },
  "about": {
    "title": "關於我",
    "p1": "你好！我是 Jacky，一名 21 歲的康奈爾大學資訊科學系大三學生。我熱衷於互動技術，特別是遊戲設計，並正在修讀該方向的輔修課程。我擁有六年的藝術與設計經驗、兩年的程式設計經驗，以及一年的遊戲開發經驗。",
    "p2": "曾經，我對自己的職涯方向感到迷惘。我不確定自己想帶來什麼樣的影響——是教育性的、情感性的，還是單純帶來歡樂。但隨著時間推移，我意識到遊戲被稱為“第九藝術”是有其道理的：它融合了多種學科，能夠傳達深刻的意義。這一認知也為我指明了方向。",
    "p3": "有趣的是，我曾經討厭寫程式——小時候對 Scratch 感到困惑而失去信心。然而，正是遊戲開發激勵我重新擁抱程式設計，並將它視為一種創作工具。而我也將孜孜不倦地學習新的技術與能力，幫助我在遊戲製作人的道路上走得更遠。",
    "p4": "除了課業與專案，我也熱愛打遊戲、旅行與烹飪。特別是旅行，讓我接觸不同文化與人文視角，經常為我帶來設計靈感。"
  },
  "footer": {
    "copyright": "版權 © 2024，Jacky Pan。保留所有權利。"
  },
  "language_menu": {
    "english": "English",
    "chinese": "簡體中文",
    "cantonese": "繁體中文"
  },
  "game1": {
    "info": {
      "title": "項目資訊",
      "role": {
        "label": "角色：",
        "value": "程式設計師，UI/UX 負責人，遊戲設計師，專案負責人"
      },
      "engine": {
        "label": "引擎／框架：",
        "value": "IntelliJ，Git，LibGDX（Java）"
      },
      "team": {
        "label": "團隊：",
        "value": "Fachoi Studio — SP25 INFO/CS 3152 遊戲設計導論"
      },
      "timeline": {
        "label": "開發時程：",
        "value": "2025年1月21日－2025年5月17日"
      }
    },
    "intro": {
      "title": "遊戲介紹",
      "text": "在一間繁忙的快遞倉庫中，送貨貓 Nox 正如往常一樣整理包裹——直到一股神秘能量席捲而來，使所有包裹復活並變成混亂的怪物！現在倉庫陷入危機，只能靠 Nox 出手拯救。玩家將操作這隻盡職的貓咪，透過快速組合零件、建構強大玩具，並運用策略、時機與反應力來恢復秩序，確保所有包裹順利送出。"
    },
    "game_design": {
      "title": "遊戲設計",
      "design_goals": "設計目標",
      "card1": {
        "title": "成就感",
        "text": "每完成一個訂單，我們希望玩家都能感受到滿滿的成就感，不僅能解鎖新的玩具，還能享受分數大幅上升的瞬間喜悅。"
      },
      "card2": {
        "title": "多樣解法",
        "text": "玩家可以透過結構辨識，用不同方式組裝出欺騙性的玩具訂單。例如，鵝形結構可以從頭部、腳部或兩側開始組裝，提供靈活的策略與創造力空間。"
      },
      "card3": {
        "title": "速度與技巧",
        "text": "本遊戲透過富挑戰性的解謎與獨特機制，讓玩家全程投入。玩家必須迅速思考、反應敏捷，並靈活應對才能推進遊戲。"
      },
      "game_mechanics": "遊戲機制"
    },
    "game_ui": {
      "ui1": {
        "title": "選單畫面",
        "text": "選單設計以可愛輕快為核心，透過動畫插圖營造氛圍。動畫利用程式動態改變 UI 元素偏移量，採用 sin/cos 波動模擬浮動效果。"
      },
      "ui2": {
        "title": "畫面轉場",
        "text": "呼應遊戲快遞主題，我們使用快遞箱開合動畫作為場景轉場設計，並延伸至關卡選擇畫面中的 UI 按鈕，統一視覺語言。"
      },
      "ui3": {
        "title": "關卡選擇",
        "text": "關卡選擇頁擁有夏日與冬季主題，對應遊戲章節與背景音樂。我設計為地圖滾動方式，引導玩家踏上 Nox 的旅程。"
      },
      "game_mechanics": "遊戲機制"
    },
    "game_mech": {
      "title1": "辨識與拼裝形狀",
      "text1": "玩家需觀察訂單板上的匿名形狀，並使用場上敵人組裝出對應形體。",
      "title2": "顏色很重要",
      "text2": "顏色對分數有決定性影響。除了粉紅色為橡皮擦，其他顏色皆會對最終得分產生不同加成。",
      "title3": "放錯了？用橡皮擦",
      "text3": "玩家可使用橡皮擦修正錯誤放置的部件，只要將其擲向錯誤玩具，即可移除並重試。"
    },
    "programming": {
      "title": "程式實作",
      "tech1": {
        "title": "依賴關係圖",
        "text": "Toymare 採用典型的 MVC 架構。所有資料模型定義於 Model，邏輯與互動處理則集中於 Controller。"
      },
      "tech2": {
        "title": "活動圖",
        "text": "活動圖展示了主要控制邏輯的流程，特別是 Game Scene 與 Gameplay Controller 兩大主控類別。"
      },
      "tech3": {
        "title": "記憶體管理",
        "text": "Toymare 透過內建的 AssetsDirectory 管理資源。所有圖片在進入畫面前預先載入並透過建構子傳遞給下一個畫面，舊畫面關閉時即釋放資源，以優化記憶體使用效率。"
      },
      "tech4": {
        "title": "Tiled JSON 解析",
        "text": "Tiled 是一款 2D 地圖設計工具。我們的地圖網格為 45×23，透過 Tiled 標記特殊格（如障礙、出生點、泥地），並解析其 JSON 輸出來載入 GameScene。"
      },
      "tech5": {
        "title": "透過狀態機與布林鏈動畫實現",
        "subtitle1": "FSM 控制訂單動畫",
        "subtitle2": "布林狀態鏈控制玩具完成動畫",
        "text1": "我們以有限狀態機（FSM）管理訂單動畫邏輯。每個 OrderState 對應特定階段，並由 updateAnimation(dt) 方法根據時間與旗標切換狀態，實現模組化與平滑動畫控制。",
        "text2": "draw(batch) 方法則結合布林旗標與時間器，依序驅動四階段動畫：抖動、收縮、展開與彈回。透過這種細膩控制，讓合體玩具動畫表現富有層次，提升整體遊戲手感。"
      },
      "game_mechanics": "遊戲機制"
    }
  }
}
